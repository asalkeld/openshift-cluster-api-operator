// Code generated by go-bindata. DO NOT EDIT.
// sources:
// capm3-controller-manager.yaml
// capm3-ipam-controller-manager.yaml
// capm3-ipam-manager-role.yaml
// capm3-ipam-manager-rolebinding.yaml
// capm3-ipam-proxy-role.yaml
// capm3-ipam-proxy-rolebinding.yaml
// capm3-manager-role.yaml
// capm3-manager-rolebinding.yaml
// capm3-proxy-role.yaml
// capm3-proxy-rolebinding.yaml
package baremetal

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _capm3ControllerManagerYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x54\xc1\x6e\x23\x37\x0c\xbd\xfb\x2b\x84\xbd\x6b\x6c\x37\x06\x9a\x0a\xf0\x21\xc8\xa6\x8b\x02\x6d\x76\xd0\x14\xbd\x16\xb4\x44\xdb\x82\x25\x51\xa5\x38\x46\xdc\xaf\x2f\xe4\xb1\x27\x33\x5e\x60\x77\xb3\xf6\x65\x40\x3e\x89\xef\x3d\x92\x82\xec\xff\x46\x2e\x9e\x92\x51\x90\x73\x99\x1f\x97\xb3\x83\x4f\xce\xa8\x8f\x98\x03\x9d\x22\x26\x99\x45\x14\x70\x20\x60\x66\x4a\x05\xd8\x60\x28\xf5\x4b\x29\x1b\xba\x22\xc8\xcd\xab\x3e\xdc\x97\xc6\xd3\x3c\x33\x1d\xbd\x43\x36\xca\xa7\x2d\x43\x11\xee\xac\x74\x8c\xba\xde\x10\xee\xfa\x43\x94\x84\x29\xe8\x1c\x20\xa1\x51\x16\x72\xbc\xd3\x97\x60\x40\xd6\x11\x12\xec\x90\xc7\xd8\x1a\x16\xa2\x50\x9a\xbe\x8e\x51\x1f\x96\xcd\xe2\xc3\x4c\xa9\x04\xf1\xeb\x77\x54\x40\xc9\x60\x07\x54\x39\x15\xc1\x38\x2b\x19\x6d\x15\x51\x30\xa0\x15\xe2\x5e\x50\x04\xb1\xfb\xdf\x47\x0a\x7f\x50\xe3\xfb\x54\x7e\x87\x4e\xc1\x98\x03\x08\x5e\x68\x8e\xfa\x51\x7f\x61\xc2\xf8\x87\x39\xbf\x97\xf5\x77\xf0\x56\xea\x6a\xf4\x15\x0e\x3e\x21\x0f\x5c\xb5\x02\xde\x8d\x98\x6b\xa5\x75\x41\x5b\xa9\x05\x5f\x04\x93\x06\xe7\x18\x4b\x59\x2f\x9a\xf3\xdf\xdc\xaf\x56\x77\x13\x78\x97\x8b\x30\x42\x5c\xef\x45\xb2\x99\xcf\x97\x3f\xfd\x7c\x86\x2e\xcd\xfd\xe2\x7e\x31\x9f\x60\x03\xed\x84\x8a\x38\x64\x5e\x0b\x77\x38\x49\x1e\xd7\xcb\xc5\x10\xf0\x11\x76\x68\xd4\xce\x72\xf5\xef\xd0\x6d\x70\xd3\xf9\xe0\x90\xcf\xdf\x9a\x37\x60\x75\x66\x7a\x3d\x99\xe3\xa2\x59\x35\x6f\x07\xfb\x89\xbc\x01\x0d\xd9\x4c\x2c\x13\xb9\x83\x25\x2d\xb1\x18\x35\x51\x77\xbd\xac\x0a\x2b\x5f\x31\x2c\xa2\xb0\xb7\xe5\x6c\xd5\x7a\x2a\x7f\xd4\xa9\x18\x21\xb9\xf1\xc1\xf9\x6d\x37\x31\x1d\xc7\xf9\xbe\x78\xfb\xf9\xe3\x3f\xcf\x0f\x7f\x3c\xbd\xb4\x0f\x8f\x4f\x23\x6a\x47\x08\x1d\xfe\xca\x14\xcd\x28\xa8\xd4\xd6\x63\x70\x7f\xe2\x76\x1a\xbd\xc4\x5b\x90\xbd\x19\xa6\xb7\x19\x76\xf3\xd6\xf5\x7f\x3b\x38\x55\xdb\xfb\xe9\xd4\x9e\xe6\x97\x89\xd6\x90\xbd\xbe\x0e\xf3\x65\x78\x4d\x84\x9a\x9a\xde\xd1\x76\x21\xb4\x14\xbc\x3d\x19\xf5\xdb\xf6\x99\xa4\x65\x2c\xf5\x29\xbb\xa2\x82\x3f\x62\xc2\x52\x5a\xa6\x0d\x8e\xc9\x56\xb3\x3f\xa1\x4c\xf9\xe7\x33\xf1\xf9\x1e\x21\xc8\xfe\xbf\x69\xea\xdc\xb7\xdb\x4c\xef\xdd\xad\xc1\xdf\xea\xfe\x2f\xab\xd5\xe2\xcb\xee\x7f\x51\x34\x33\x09\x59\x0a\x46\xfd\xf5\xd8\x0e\x71\x46\x70\xfe\xdd\x92\xea\xa9\xd3\xb7\x15\x09\x72\xf4\x09\xc4\x53\xfa\xc4\x60\xb1\x45\xf6\xe4\x5e\xd0\x52\x72\xc5\xa8\x61\x71\x84\x02\xf2\x19\x36\x5a\x71\xdc\x6e\xd1\x8a\x51\xcf\xf4\x62\xf7\xe8\xba\xf0\xd6\xf0\x03\x9e\x8c\x4a\xe4\x50\x33\x05\x6c\xea\xda\x70\x42\xc1\xf3\xab\x35\x69\xac\xee\xb1\x8f\xec\xc5\x5b\x08\x0f\xce\x51\x2a\x9f\x53\x78\xdb\x2d\xca\xb5\x34\xb1\x51\x4f\xaf\xbe\x48\x99\xfd\x1f\x00\x00\xff\xff\xa3\x9b\x93\x50\xdc\x06\x00\x00")

func capm3ControllerManagerYamlBytes() ([]byte, error) {
	return bindataRead(
		_capm3ControllerManagerYaml,
		"capm3-controller-manager.yaml",
	)
}

func capm3ControllerManagerYaml() (*asset, error) {
	bytes, err := capm3ControllerManagerYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "capm3-controller-manager.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _capm3IpamControllerManagerYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x54\x4d\x6f\x1b\x39\x0c\xbd\xfb\x57\x08\xb9\xcf\x87\x37\x5e\xac\x57\x80\x0f\x41\x92\x0d\x16\x68\xd3\x41\x53\xf4\x5a\xd0\x1a\xda\x16\x2c\x89\x2a\xc5\x31\xe2\xfe\xfa\x42\xfe\x98\xce\xb8\x2d\x9a\x64\x4e\x03\xf2\x91\x7a\x8f\x8f\x12\x44\xfb\x19\x39\x59\x0a\x5a\x41\x8c\xa9\xda\x4d\x27\x5b\x1b\x5a\xad\xee\x30\x3a\xda\x7b\x0c\x32\xf1\x28\xd0\x82\x80\x9e\x28\xe5\x60\x89\x2e\xe5\x3f\xa5\x8c\xeb\x92\x20\x97\xcf\xc5\x76\x9e\x4a\x4b\x55\x64\xda\xd9\x16\x59\x2b\x1b\x56\x0c\x49\xb8\x33\xd2\x31\x16\xb9\x83\xbb\x3e\x16\x51\x10\x26\x57\x44\x07\x01\xb5\xb2\x11\x7c\x71\x8a\x39\xe4\xc2\x43\x80\x35\xf2\x10\x9a\xc3\x42\xe4\x52\x79\x3c\x46\xab\xab\x69\x59\x5f\x4d\x94\x0a\xe0\x51\x2b\x03\xd1\x5f\x17\xbf\x6f\x94\x51\x29\x82\xe9\xa1\x69\x9f\x04\xfd\x24\x45\x34\x59\x48\x42\x87\x46\x88\x8f\xa2\x3c\x88\xd9\xbc\x1b\xa8\x7c\xa3\xce\x57\x29\x7d\x81\x56\x41\x1f\x1d\x08\x9e\x58\x0e\x2c\xc9\x9f\x1b\x11\x7e\x33\xe5\x57\x92\x7e\x01\x6d\xa5\xce\x63\x3e\xc3\xc1\x06\xe4\x9e\x6a\xa1\x80\xd7\x03\xe2\x85\x2a\x32\x25\xb6\x26\x15\xd0\xb6\xbc\x98\xfe\xf5\x4f\x59\x97\x75\x39\xd5\xf3\x7a\x5e\x0f\x0e\xf6\x1e\x42\x3b\x2c\xac\x2e\xc9\x61\xd8\x0d\xf3\xc7\x6d\x69\x3e\xdc\x7d\x79\xbc\x79\x7f\xff\xd4\xdc\xdc\xde\xf7\x59\xa5\x76\xe0\x3a\xfc\x8f\xc9\xeb\x41\x50\xa9\x95\x45\xd7\x7e\xc4\xd5\x38\x7a\x8a\x37\x20\x1b\xdd\x7b\x51\xf6\x8b\xd6\x63\xad\x87\x35\x6a\xf5\xb5\x83\x7d\x36\xe1\x38\xeb\xc2\x52\x65\xe3\x41\x1d\xa6\x74\x1e\xa9\xde\x65\x95\x7f\x8f\x4b\x9b\xce\xb9\x86\x9c\x35\x7b\xad\xfe\x5f\x3d\x92\x34\x8c\x29\x5f\xc9\x33\xca\xd9\x1d\x06\x4c\xa9\x61\x5a\xe2\x90\xe3\x46\x24\x3e\xa0\x8c\x69\xc7\x03\xdf\x6a\x83\xe0\x64\xf3\x6d\x9c\x22\x16\xad\x2e\x33\xc7\x91\x5d\xce\x35\x63\x47\x96\xf5\xb6\x36\x87\x2e\xff\xce\x66\xf5\xa0\xf9\xb1\xc9\xcf\x87\x46\x26\x21\x43\x4e\xab\x4f\xb7\x4d\x1f\x67\x84\xd6\xbe\x5a\x52\xae\xda\xff\x59\xd1\xaf\xb6\x2d\xa1\xc9\xf7\xc0\xd9\x24\x18\xce\xae\x2c\xea\xc3\xd2\xd5\x7a\x3e\x9b\x5d\x8f\xe0\x5d\x4c\xc2\x08\x7e\x91\xe9\xe8\xaa\x1a\xef\x67\x35\xc2\x3a\x5a\x0b\x25\x69\x91\x79\x21\xdc\xe1\x28\xb9\x5b\x4c\xeb\xcb\x45\x59\x1b\xce\x7b\xb2\xed\x96\xb8\xec\xac\x6b\x91\x0f\xff\x05\x2f\xc1\x14\x91\xe9\x79\x9f\xd7\x64\x56\xd6\x17\x0e\x5d\x80\x5e\xec\xd4\x48\x5d\xef\x94\x48\x4c\xa7\xa8\x20\x7b\x1b\x40\x2c\x85\x07\x06\x83\x0d\xb2\xa5\xf6\x09\x0d\x85\x36\x69\xd5\x2b\x10\x72\xc8\x07\xd8\xe0\x66\xe3\x6a\x85\x46\xb4\x7a\xa4\x27\xb3\xc1\xb6\x73\x3f\x06\xb0\xc5\xbd\x56\x81\x5a\x2c\x98\x1c\x96\x99\x3f\x07\x14\x3c\xbc\x55\x1e\xf2\xdb\x35\xf9\x1e\x00\x00\xff\xff\x90\x09\xd8\x62\x9c\x06\x00\x00")

func capm3IpamControllerManagerYamlBytes() ([]byte, error) {
	return bindataRead(
		_capm3IpamControllerManagerYaml,
		"capm3-ipam-controller-manager.yaml",
	)
}

func capm3IpamControllerManagerYaml() (*asset, error) {
	bytes, err := capm3IpamControllerManagerYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "capm3-ipam-controller-manager.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _capm3IpamManagerRoleYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xcc\x91\x3f\x4f\x33\x31\x0c\xc6\xf7\x7c\x0a\xab\xfb\x5d\xf5\xaa\xcb\xab\x5b\x19\xd8\x11\x62\x77\x13\xd3\x5a\xcd\x3f\xd9\xc9\x81\xf8\xf4\xe8\x72\xc7\xd2\x16\x44\x81\x4a\x9d\x62\x59\xce\xf3\x7b\x1e\xdb\x60\xe6\x27\x12\xe5\x14\x07\x90\x2d\xda\x1e\x6b\xd9\x27\xe1\x37\x2c\x9c\x62\x7f\xf8\xaf\x3d\xa7\xf5\xf8\xcf\x1c\x38\xba\x01\xee\x7c\xd5\x42\xf2\x90\x3c\x99\x40\x05\x1d\x16\x1c\x0c\x80\x15\x6a\x1f\x1e\x39\x90\x16\x0c\x79\x80\x58\xbd\x37\x00\x1e\xb7\xe4\x75\x9a\x01\xb0\xf3\xef\xfe\xb5\x5b\x74\xb3\xa4\x91\x1d\xc9\x00\x1c\x9f\x05\xb5\x48\xb5\xa5\x0a\x75\x93\xb6\xdf\x18\x80\x88\x81\x06\xb0\x98\xc3\xa6\xe3\x8c\xa1\x0b\x18\x71\x47\xd2\xc9\x64\x41\xaa\x27\x1d\x4c\x07\x98\xf9\x5e\x52\xcd\x0d\xd4\xc1\x6a\x65\x00\x84\x34\x55\xb1\xb4\xf4\x68\xa4\x58\xd4\x00\x8c\x24\xdb\xa5\xd7\x6c\x53\x2b\x77\x54\xda\xeb\x59\xe7\x22\x63\xb1\xfb\x56\xd5\xec\x3e\xa6\x5e\x5a\xf3\x5b\x3c\x25\x2b\xf4\x05\xd0\x91\xa7\xbf\x60\x1f\x2f\xf5\xd4\xc9\x32\x71\x64\xe5\x04\xfa\x6b\xfd\xb5\x16\x2c\xf5\x0c\xe6\x44\x73\xba\x64\x3f\xdf\xf8\xac\x22\x67\x74\x4e\x48\x95\xae\xbf\xbf\x0b\xbc\x7c\x1a\xf0\x2c\xf3\x07\x24\xeb\x91\xc3\x2d\x44\x9e\x8d\x5c\x3d\x6f\x4e\xc9\xdf\x42\xdc\xe6\xe3\xb2\xb4\xef\x01\x00\x00\xff\xff\xfa\x9d\xcf\x12\x3a\x05\x00\x00")

func capm3IpamManagerRoleYamlBytes() ([]byte, error) {
	return bindataRead(
		_capm3IpamManagerRoleYaml,
		"capm3-ipam-manager-role.yaml",
	)
}

func capm3IpamManagerRoleYaml() (*asset, error) {
	bytes, err := capm3IpamManagerRoleYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "capm3-ipam-manager-role.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _capm3IpamManagerRolebindingYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x8f\xb1\x4e\xc4\x30\x0c\x86\xf7\x3c\x85\x5f\x20\x45\xe8\x16\x94\x0d\x18\xd8\x0f\x89\xdd\x75\xdd\xc3\x5c\x12\x47\x8e\x53\x21\x9e\x1e\x55\x14\x16\x24\xd8\x7e\x4b\xf6\xf7\xfd\x0e\xd8\xe4\x85\xad\x8b\xd6\x04\x36\x23\x4d\x38\xfc\x55\x4d\x3e\xd0\x45\xeb\x74\xbd\xeb\x93\xe8\xcd\x76\x1b\xae\x52\x97\x04\x8f\x79\x74\x67\x3b\x6b\xe6\x07\xa9\x8b\xd4\x4b\x28\xec\xb8\xa0\x63\x0a\x00\x19\x67\xce\x7d\x4f\x00\xf4\xb5\x3a\xbd\xc7\x03\xd2\x4c\x37\x59\xd8\x12\x48\x5d\x0d\xbb\xdb\x20\x1f\xc6\x71\x27\xe4\x53\x00\xa8\x58\x38\x01\x61\x2b\xa7\x28\x0d\x4b\x2c\x58\xf1\xc2\x16\x4d\x33\xcf\x87\x6f\xcf\x67\x5e\x77\x09\x36\x79\x32\x1d\xed\x8f\xea\x01\xe0\x57\xf3\xff\x4c\xa1\x8f\xf9\x8d\xc9\x7b\x0a\xf1\xb8\x7e\x66\xdb\x84\xf8\x9e\x48\x47\xf5\x1f\xc0\xc2\x2b\x8e\xfc\x3d\xf7\x86\xc4\x09\x94\x5a\x3c\x9e\x8f\xd8\x24\x7c\x06\x00\x00\xff\xff\x43\x4c\x57\x9b\x64\x01\x00\x00")

func capm3IpamManagerRolebindingYamlBytes() ([]byte, error) {
	return bindataRead(
		_capm3IpamManagerRolebindingYaml,
		"capm3-ipam-manager-rolebinding.yaml",
	)
}

func capm3IpamManagerRolebindingYaml() (*asset, error) {
	bytes, err := capm3IpamManagerRolebindingYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "capm3-ipam-manager-rolebinding.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _capm3IpamProxyRoleYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x90\xb1\x4e\xee\x30\x0c\x85\xf7\x3c\x85\x5f\x20\xbd\xba\xfa\x17\x94\x95\x81\x9d\x81\xdd\x4d\x0f\xc2\x34\x4d\x22\xdb\x29\x3f\x3c\x3d\x2a\x74\x40\x80\xd8\x2c\xf9\xf8\x3b\x9f\x1c\xb8\xcb\x03\xd4\xa4\xd5\x44\x3a\x73\x9e\x78\xf8\x53\x53\x79\x63\x97\x56\xa7\xf5\xc6\x26\x69\xff\xf6\xff\x61\x95\xba\x24\xba\x2d\xc3\x1c\x7a\xdf\x0a\xc2\x06\xe7\x85\x9d\x53\x20\x2a\x3c\xa3\xd8\x31\x11\xe5\xcf\xcc\x74\x8d\xe7\x75\xd7\xb6\xcb\x02\x4d\x24\xf5\x51\xd9\x5c\x47\xf6\xa1\x88\x07\xa1\x5c\x02\x51\xe5\x0d\x89\x32\xf7\xed\x12\xa5\xf3\x16\xbb\xb6\xeb\x6b\xd4\xa3\x46\x47\x81\xa5\x10\x89\xbb\xdc\x69\x1b\xfd\xa3\x26\xd2\x21\x8a\xea\x92\xbf\x9a\x06\x22\x85\xb5\xa1\x19\x67\xcc\xdb\x8a\xaa\xd8\x05\x2f\x16\x88\x76\xe8\x7c\x6e\xb2\x82\x1d\xbf\x83\xbf\x7f\xe0\x27\xd7\xc6\xfc\x8c\xec\x9c\x33\xcc\xfe\xe2\xbf\x07\x00\x00\xff\xff\x07\xc1\x46\x5f\x63\x01\x00\x00")

func capm3IpamProxyRoleYamlBytes() ([]byte, error) {
	return bindataRead(
		_capm3IpamProxyRoleYaml,
		"capm3-ipam-proxy-role.yaml",
	)
}

func capm3IpamProxyRoleYaml() (*asset, error) {
	bytes, err := capm3IpamProxyRoleYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "capm3-ipam-proxy-role.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _capm3IpamProxyRolebindingYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x8f\xb1\x4e\x34\x31\x0c\x84\xfb\x3c\x85\x5f\x20\xfb\xeb\xd7\x35\x28\x1d\x50\xd0\x1f\x12\xbd\xd7\xf1\x82\xb9\x6c\x6c\x39\xc9\xea\xe0\xe9\xd1\x8a\x85\x06\xe9\xba\xb1\xe4\x99\x6f\x26\xa0\xc9\x0b\x7b\x13\xad\x09\x7c\x46\x9a\x70\xf4\x37\x75\xf9\xc4\x2e\x5a\xa7\xcb\x5d\x9b\x44\xff\x6d\xff\xc3\x45\x6a\x4e\xf0\x58\x46\xeb\xec\x67\x2d\xfc\x20\x35\x4b\x7d\x0d\x2b\x77\xcc\xd8\x31\x05\x80\x82\x33\x97\xb6\x2b\x00\xfa\x7e\x9d\xae\xf1\x08\x31\xd7\x4d\x32\x7b\x02\xa9\x8b\x63\xeb\x3e\xa8\x0f\xe7\xb8\x27\x94\x53\x00\xa8\xb8\x72\x02\x42\x5b\x4f\x51\x0c\xd7\x68\xae\xd7\x8f\xe8\x5a\x78\x3e\x68\xbb\x3e\xf3\xb2\x23\xd0\xe4\xc9\x75\xd8\x8d\xe2\x01\xe0\x4f\xef\xdb\x9c\xd0\xc6\xfc\xce\xd4\x5b\x0a\xf1\xf0\x3e\xb3\x6f\x42\x7c\x4f\xa4\xa3\xf6\x5f\x7b\xe6\x05\x47\xf9\xb9\x9b\x21\x71\x02\x25\x8b\xc7\xf0\x88\x26\xe1\x2b\x00\x00\xff\xff\xb4\xf4\xf1\x46\x60\x01\x00\x00")

func capm3IpamProxyRolebindingYamlBytes() ([]byte, error) {
	return bindataRead(
		_capm3IpamProxyRolebindingYaml,
		"capm3-ipam-proxy-rolebinding.yaml",
	)
}

func capm3IpamProxyRolebindingYaml() (*asset, error) {
	bytes, err := capm3IpamProxyRolebindingYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "capm3-ipam-proxy-rolebinding.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _capm3ManagerRoleYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xcc\x96\x3f\x6f\xdb\x30\x10\xc5\x77\x7e\x8a\x43\x76\x29\x28\xb2\x14\x5a\x3b\x74\x2f\x8a\xee\x27\xf2\x1a\x13\xe6\x3f\x1c\x8f\xee\x9f\x4f\x5f\x88\x56\x90\xc4\x4e\x0d\x25\x96\x64\x4d\x26\x69\xf2\x7e\x0f\x8f\xe4\xa3\x14\x26\xfb\x83\x38\xdb\x18\x3a\xe0\x1e\x75\x8b\x45\x76\x91\xed\x5f\x14\x1b\x43\xbb\xff\x9c\x5b\x1b\xef\x0f\x9f\xd4\xde\x06\xd3\xc1\x17\x57\xb2\x10\x7f\x8b\x8e\x94\x27\x41\x83\x82\x9d\x02\xd0\x4c\x75\xc1\x77\xeb\x29\x0b\xfa\xd4\x41\x28\xce\x29\x00\x87\x3d\xb9\x3c\xcc\x01\xd0\xc7\xd5\xed\xef\x66\xac\x9b\x38\x1e\xac\x21\xee\xc0\x86\x9f\x8c\x59\xb8\x68\x29\x4c\xcd\x50\xdb\x3d\x28\x80\x80\x9e\x3a\xd0\x98\xfc\x43\xe3\x31\xe0\x23\x71\xc3\x03\x9d\x8b\xa3\xdc\xa9\x06\x30\xd9\xaf\x1c\x4b\xaa\x8c\x06\xee\xee\x14\x00\x53\x8e\x85\x35\x8d\x63\x74\xa0\x20\x59\x01\x1c\x88\xfb\x71\xac\x2a\xa6\xda\x7c\x24\xa9\xbf\xce\xe6\x63\x23\xa1\xe8\x5d\x6d\x95\x64\x9e\x66\xfd\xaa\x83\x93\x78\x99\x34\xd3\x05\xa0\x21\x47\x73\xb0\x4f\xfd\x3c\x57\x32\xce\x38\x91\x72\x06\x9d\xa3\xfe\x73\xe7\x3e\x0b\x4a\x59\x9c\xf9\x5f\xcc\x07\x6a\xee\x4b\x4f\x68\xbc\x8e\x41\x38\xba\xe4\x30\xd0\x16\xb6\xcf\xa3\xde\xd9\x40\x86\x92\x8b\x7f\xfc\xc5\x43\xbc\xba\xa8\xfc\xaa\x73\xd5\x9e\xbf\xbe\xfc\xed\x04\x09\x35\x1e\xde\x3e\xdc\x0b\x78\x72\xa5\xbe\x8b\xde\x9c\xe9\x98\x8b\x3e\x44\xb3\x76\x68\xfd\x66\xfd\x79\x56\x78\x3b\x87\x36\x6d\xce\x0d\x7d\x11\xf2\xc9\xa1\xac\x90\x82\x73\x88\xbc\x8d\x4f\x36\xa1\x31\x4c\x39\x9f\xba\xb4\x70\xee\xbd\xe0\x4e\x7f\x03\x3f\xcc\xda\x76\x86\x3c\xe9\x5b\xdc\x88\x17\xaf\xde\x26\x8d\x98\xf4\x10\x2f\x76\x15\x46\xfa\x7a\xa9\x71\xc4\xbe\xa9\xa8\x47\xa6\xfa\xf7\x2e\xe6\x15\x3e\x98\x26\x2b\x79\xdf\xce\xfc\x0b\x00\x00\xff\xff\xdd\xf5\x4f\x58\x9a\x0d\x00\x00")

func capm3ManagerRoleYamlBytes() ([]byte, error) {
	return bindataRead(
		_capm3ManagerRoleYaml,
		"capm3-manager-role.yaml",
	)
}

func capm3ManagerRoleYaml() (*asset, error) {
	bytes, err := capm3ManagerRoleYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "capm3-manager-role.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _capm3ManagerRolebindingYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x8f\xb1\x4e\x04\x31\x0c\x44\xfb\x7c\x85\x7f\x20\x8b\xd0\x35\x28\x1d\x50\xd0\x1f\x12\xbd\xd7\xf1\x1e\xe6\xb2\x71\xe4\x38\x2b\xc4\xd7\xa3\x15\x0b\x0d\xd2\x75\x63\xc9\xf3\x66\x26\x60\x93\x37\xb6\x2e\x5a\x13\xd8\x8c\x34\xe1\xf0\x77\x35\xf9\x42\x17\xad\xd3\xf5\xa1\x4f\xa2\x77\xdb\x7d\xb8\x4a\xcd\x09\x9e\xcb\xe8\xce\x76\xd6\xc2\x4f\x52\xb3\xd4\x4b\x58\xd9\x31\xa3\x63\x0a\x00\x05\x67\x2e\x7d\x57\x00\xf4\xf3\x3a\x7d\xc6\x03\xd2\x4c\x37\xc9\x6c\x09\xa4\x2e\x86\xdd\x6d\x90\x0f\xe3\xb8\x13\xca\x29\x00\x54\x5c\x39\x01\x61\x5b\x4f\x71\xc5\x8a\x17\xb6\x68\x5a\x78\x3e\xa2\x76\x7d\xe6\x65\xe7\x63\x93\x17\xd3\xd1\x6e\xb4\x0e\x00\xff\x4a\xdf\x08\x09\x7d\xcc\x1f\x4c\xde\x53\x88\x87\xf1\x95\x6d\x13\xe2\x47\x22\x1d\xd5\xff\xbc\x99\x17\x1c\xe5\xf7\xee\x0d\x89\x13\x28\xb5\x78\x4c\x8e\xd8\x24\x7c\x07\x00\x00\xff\xff\xdd\xaa\xa3\x31\x5a\x01\x00\x00")

func capm3ManagerRolebindingYamlBytes() ([]byte, error) {
	return bindataRead(
		_capm3ManagerRolebindingYaml,
		"capm3-manager-rolebinding.yaml",
	)
}

func capm3ManagerRolebindingYaml() (*asset, error) {
	bytes, err := capm3ManagerRolebindingYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "capm3-manager-rolebinding.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _capm3ProxyRoleYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x8f\xb1\x4e\xee\x30\x0c\x85\xf7\x3c\x85\x5f\x20\xbd\xba\xfa\x17\x94\x95\x81\x9d\x81\xdd\x4d\x0f\xc2\x34\x4d\x22\xdb\x29\x3f\x3c\x3d\x2a\x74\x40\x80\xd8\x2c\xf9\xf8\x3b\x9f\x03\x77\x79\x80\x9a\xb4\x9a\x48\x67\xce\x13\x0f\x7f\x6a\x2a\x6f\xec\xd2\xea\xb4\xde\xd8\x24\xed\xdf\xfe\x3f\xac\x52\x97\x44\xb7\x65\x98\x43\xef\x5b\x41\xd8\xe0\xbc\xb0\x73\x0a\x44\x85\x67\x14\x3b\x26\xa2\xfc\x99\x99\xae\xf1\xbc\xee\xda\x76\x59\xa0\x89\xa4\x3e\x2a\x9b\xeb\xc8\x3e\x14\xf1\x20\x94\x4b\x20\xaa\xbc\x21\x51\xe6\xbe\x5d\x62\xd7\x76\x7d\x8d\x7a\x34\xe8\x28\xb0\x14\x22\x71\x97\x3b\x6d\xa3\x7f\x34\x44\x3a\x1c\x51\x5d\xf2\x57\xc9\x40\xa4\xb0\x36\x34\xe3\x8c\x79\x5b\x51\x15\xbb\xe0\xc5\x02\xd1\x0e\x9d\xcf\x4d\x56\xb0\xe3\x77\xf0\xf7\xe7\x7f\x72\x6d\xcc\xcf\xc8\xce\x39\xc3\xec\x2f\xfe\x7b\x00\x00\x00\xff\xff\xf8\xea\x78\x32\x5e\x01\x00\x00")

func capm3ProxyRoleYamlBytes() ([]byte, error) {
	return bindataRead(
		_capm3ProxyRoleYaml,
		"capm3-proxy-role.yaml",
	)
}

func capm3ProxyRoleYaml() (*asset, error) {
	bytes, err := capm3ProxyRoleYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "capm3-proxy-role.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _capm3ProxyRolebindingYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x8f\xb1\x4e\x34\x31\x0c\x84\xfb\x3c\x85\x5f\x20\xfb\xeb\xd7\x35\x28\x1d\x50\xd0\x1f\x12\xbd\xd7\xf1\x82\xb9\x6c\x1c\x39\xce\xea\xe0\xe9\xd1\x8a\x85\x06\x41\x37\x96\x3c\xdf\xcc\x04\x6c\xf2\xc4\xd6\x45\x6b\x02\x9b\x91\x26\x1c\xfe\xa2\x26\xef\xe8\xa2\x75\xba\xdc\xf4\x49\xf4\xdf\xf6\x3f\x5c\xa4\xe6\x04\xf7\x65\x74\x67\x3b\x6b\xe1\x3b\xa9\x59\xea\x73\x58\xd9\x31\xa3\x63\x0a\x00\x05\x67\x2e\x7d\x57\x00\xf4\xf9\x3a\x5d\xe3\x01\x69\xa6\x9b\x64\xb6\x04\x52\x17\xc3\xee\x36\xc8\x87\x71\xdc\x09\xe5\x14\x00\x2a\xae\x9c\x80\xb0\xad\xa7\xd8\x4c\xaf\x6f\xd1\xb4\xf0\x7c\x04\xed\xfa\xcc\xcb\x4e\xc7\x26\x0f\xa6\xa3\xfd\xd1\x39\x00\xfc\xa8\xfc\x6b\x44\xe8\x63\x7e\x65\xf2\x9e\x42\x3c\x6c\x8f\x6c\x9b\x10\xdf\x12\xe9\xa8\xfe\xed\xcc\xbc\xe0\x28\x5f\x77\x6f\x48\x9c\x40\xa9\xc5\x63\x6e\xc4\x26\xe1\x23\x00\x00\xff\xff\xbe\xa7\xbd\xa2\x56\x01\x00\x00")

func capm3ProxyRolebindingYamlBytes() ([]byte, error) {
	return bindataRead(
		_capm3ProxyRolebindingYaml,
		"capm3-proxy-rolebinding.yaml",
	)
}

func capm3ProxyRolebindingYaml() (*asset, error) {
	bytes, err := capm3ProxyRolebindingYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "capm3-proxy-rolebinding.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"capm3-controller-manager.yaml":       capm3ControllerManagerYaml,
	"capm3-ipam-controller-manager.yaml":  capm3IpamControllerManagerYaml,
	"capm3-ipam-manager-role.yaml":        capm3IpamManagerRoleYaml,
	"capm3-ipam-manager-rolebinding.yaml": capm3IpamManagerRolebindingYaml,
	"capm3-ipam-proxy-role.yaml":          capm3IpamProxyRoleYaml,
	"capm3-ipam-proxy-rolebinding.yaml":   capm3IpamProxyRolebindingYaml,
	"capm3-manager-role.yaml":             capm3ManagerRoleYaml,
	"capm3-manager-rolebinding.yaml":      capm3ManagerRolebindingYaml,
	"capm3-proxy-role.yaml":               capm3ProxyRoleYaml,
	"capm3-proxy-rolebinding.yaml":        capm3ProxyRolebindingYaml,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"capm3-controller-manager.yaml":       {capm3ControllerManagerYaml, map[string]*bintree{}},
	"capm3-ipam-controller-manager.yaml":  {capm3IpamControllerManagerYaml, map[string]*bintree{}},
	"capm3-ipam-manager-role.yaml":        {capm3IpamManagerRoleYaml, map[string]*bintree{}},
	"capm3-ipam-manager-rolebinding.yaml": {capm3IpamManagerRolebindingYaml, map[string]*bintree{}},
	"capm3-ipam-proxy-role.yaml":          {capm3IpamProxyRoleYaml, map[string]*bintree{}},
	"capm3-ipam-proxy-rolebinding.yaml":   {capm3IpamProxyRolebindingYaml, map[string]*bintree{}},
	"capm3-manager-role.yaml":             {capm3ManagerRoleYaml, map[string]*bintree{}},
	"capm3-manager-rolebinding.yaml":      {capm3ManagerRolebindingYaml, map[string]*bintree{}},
	"capm3-proxy-role.yaml":               {capm3ProxyRoleYaml, map[string]*bintree{}},
	"capm3-proxy-rolebinding.yaml":        {capm3ProxyRolebindingYaml, map[string]*bintree{}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}
